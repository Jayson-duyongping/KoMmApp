1.先下载anaconda3，整合了pip，好编译
2.使用Chaquopy，gradle配置
a.根目录gradle:
    plugins {
        id("com.chaquo.python") version "15.0.1" apply false
    }
b.模块(app)gradle:
    apply plugin: 'com.chaquo.python'
    android {
        defaultConfig {
            ndk {
                abiFilters "arm64-v8a"
            }
            python {
                buildPython "D:\\Development\\Python\\anaconda3\\python.exe"
                pip {
                    install "Pillow"
                }
            }
        }
    }
3.python文件（见hello.py）
4.android代码
    初始化
    if (!Python.isStarted()) {
        Python.start(AndroidPlatform(this))
    }
    Python.getInstance()
    使用1：
    val pyObject = python.getModule("hello")
    val pythonResult = pyObject.callAttr("sayHello").toString()
    ToastUtil.show(this, pythonResult)
    使用2：
    lifecycleScope.launch(Dispatchers.IO) {
    // 将Bitmap转换为字节数组
    val stream = ByteArrayOutputStream()
    originBitmap.compress(Bitmap.CompressFormat.PNG, 100, stream)
    val byteArray: ByteArray = stream.toByteArray()
    // 调用Python脚本，传递Bitmap数据并接收返回的处理后的结果
    val pyObject = python.getModule("hello")
    val pythonResult: PyObject = pyObject.callAttr("getResizeBitmap", byteArray, 200, 150)
    // 解析Python返回的处理后的Bitmap数据
    val resizedByteArray: ByteArray = pythonResult.toJava(ByteArray::class.java)
    val resizedBitmap: Bitmap =
    BitmapFactory.decodeByteArray(resizedByteArray, 0, resizedByteArray.size)
    withContext(Dispatchers.Main) {
        binding.pictureIv.setImageBitmap(resizedBitmap)
        }
    }

注释：
因为引入了 chaquo插件和必须的ndk.abiFilters "arm64-v8a"，所以包体积增加了13-14M