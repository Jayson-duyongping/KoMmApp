1.SDK Tools中安装NDK和CMake

2.写cpp文件
#include <jni.h>
#include <string>

//方法签名格式为 extern "C" JNIEXPORT 返回值类型 JNICALL Java_包名_类名_方法名(JNIEnv*,jobject,参数列表)
extern "C" JNIEXPORT jstring JNICALL
Java_com_jayson_komm_api_view_NDKActivity_stringFromJNI(JNIEnv *env,jobject /* this */) {
    std::string hello = "Hello from C++";
    return env->NewStringUTF(hello.c_str());
}

3.配置CMakeLists.txt

4.gradle
android {
    defaultConfig {
        ndk {
            abiFilters "arm64-v8a"
        }
        // 配置CMakeLists的参数
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                arguments "-DANDROID_ARM_NEON=TRUE"
            }
        }
    }

    externalNativeBuild{
        cmake{
            path "src/main/cpp/CMakeLists.txt"
        }
    }
}

5.使用
private external fun stringFromJNI(): String
companion object {
    private const val TAG = "NDKActivity"
    init {
        // 静态加载native库
        System.loadLibrary("native")
    }
}